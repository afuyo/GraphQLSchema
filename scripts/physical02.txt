MATCH (n:AcordPhysicalModel) detach delete (n);

//Municipality is many to many and not supported in amplify yet. Needs to be handeld manually that's why we 
//exlude it for now.
MATCH (n:AcordLogicalModel:AcordType) where n.ModelName = "LogModel 1"
// and n.Name <> "Municipality"
CREATE (fo:AcordPhysicalModel:AcordNodeType {ModelName:"FysModel 1", FBB:n.FBB, Name:n.Name});


//##############################POC1 Step 6 create Physical Properties


MATCH (n:AcordLogicalModel:AcordLogicalProperty) where n.ModelName = "LogModel 1"
CREATE (fp:AcordPhysicalModel:AcordPhysicalProperty {ModelName:"FysModel 1", FBB:n.FBB, Name:n.Name, type_id:n.type_id});

match (e:AcordPhysicalProperty)
match (o:AcordLogicalDataType)
where (e.type_id=o.FBB)
set  e.dataType=o.Name
set e.umlType=o.umlType;

// add datatypes as properties


MATCH (n:AcordLogicalModel:AcordLogicalRelation) where n.ModelName = "LogModel 1"
CREATE (fp:AcordPhysicalModel:AcordPhysicalRelation {ModelName:"FysModel 1", FBB:n.FBB, FBB_O:n.FBB_O, Name:n.Name, association:n.association,type:n.type, cardinality:n.cardinality});


MATCH (n:AcordLogicalModel:AcordLogicalGeneralization) where n.ModelName = "LogModel 1"
CREATE (fp:AcordPhysicalModel:AcordPhysicalGeneralization {ModelName:"FysModel 1", Name:n.Name, FBB:n.FBB, FBB_O:n.FBB_O, general:n.general, type:n.type});





//###################################POC1 Step 7.1 create Proerties relationships##############




MATCH (o:AcordLogicalModel:AcordType {ModelName: "LogModel 1"})-[:FUNCTIONALLY_DEPENDS]->(p:AcordLogicalModel:AcordLogicalProperty)
WITH o.Name as ObjektName, o.FBB AS FBB_lmo, p.Name as PropertyName, p.FBB as FBB_lmp 
MATCH (o:AcordPhysicalModel:AcordNodeType {ModelName: "FysModel 1", Name: ObjektName, FBB:FBB_lmo})
MATCH (p:AcordPhysicalModel:AcordPhysicalProperty {ModelName: "FysModel 1", Name: PropertyName, FBB:FBB_lmp})
MERGE (o)-[:HAS_PROPERTY]->(p);




//*****************POC1 Step 7.2 create Relationships 


MATCH (o:AcordLogicalModel:AcordType {ModelName: "LogModel 1"})-[:RELATIONALLY_DEPENDS]->(p:AcordLogicalModel:AcordLogicalRelation)
WITH o.Name as ObjektName, o.FBB AS FBB_lmo, p.Name as PropertyName, p.FBB as FBB_lmp, p.association as ass_lmp, p.type as type_lmp 
MATCH (o:AcordPhysicalModel:AcordNodeType {ModelName: "FysModel 1", Name: ObjektName, FBB:FBB_lmo})
MATCH (p:AcordPhysicalModel:AcordPhysicalRelation {ModelName: "FysModel 1", Name: PropertyName, FBB:FBB_lmp, association: ass_lmp, type: type_lmp})
MERGE (o)-[:HAS_RELATIONSHIP]->(p);


MATCH (p:AcordLogicalModel:AcordLogicalRelation)-[:RELATIONALLY_DEPENDS]->(o:AcordLogicalModel:AcordType {ModelName: "LogModel 1"})
WITH o.Name as ObjektName, o.FBB AS FBB_lmo, p.Name as PropertyName, p.FBB as FBB_lmp, p.association as ass_lmp, p.type as type_lmp 
MATCH (o:AcordPhysicalModel:AcordNodeType {ModelName: "FysModel 1", Name: ObjektName, FBB:FBB_lmo})
MATCH (p:AcordPhysicalModel:AcordPhysicalRelation {ModelName: "FysModel 1", Name: PropertyName, FBB:FBB_lmp, association: ass_lmp, type: type_lmp})
MERGE (p)-[:HAS_RELATIONSHIP]->(o);

MERGE (o:AcordNodeType)-[:HAS_RELATIONSHIP]->(p:AcordPhysicalRelation) on MATCH set p.Name= o.Name+p.Name return o,p;


//************POC1 Step 7.3 create generalizations


MATCH (o:AcordLogicalModel:AcordType {ModelName: "LogModel 1"})-[:IS_GENERALIZATION_OF]->(p:AcordLogicalModel:AcordLogicalGeneralization)
WITH o.Name as ObjektName, o.FBB as FBB_lmo, p.Name as PropertyName, p.FBB as FBB_lmp, p.general as genOf, p.type as type_lmp
MATCH (o:AcordPhysicalModel:AcordNodeType {ModelName: "FysModel 1", Name: ObjektName, FBB:FBB_lmo})
MATCH (p:AcordPhysicalModel:AcordPhysicalGeneralization {ModelName: "FysModel 1", Name: PropertyName, FBB:FBB_lmp, general: genOf, type: type_lmp})
MERGE (o)-[:IS_SUBTYPE_OF]->(p);


MATCH (p:AcordLogicalModel:AcordLogicalGeneralization)-[:IS_GENERALIZATION_OF]->(o:AcordLogicalModel:AcordType {ModelName: "LogModel 1"})
WITH p.FBB as FBB_lmp, p.general as genOf, o.FBB as FBB_O
MATCH (p:AcordPhysicalModel:AcordPhysicalGeneralization {ModelName: "FysModel 1", FBB:FBB_lmp})
MATCH (o:AcordPhysicalModel:AcordNodeType {ModelName: "FysModel 1", FBB: FBB_O})
MERGE (p)<-[:IS_SUBTYPE_OF]-(o);

//***********************************************************************************
// TRYG CUSTOM EXTENSIONS entities
//**********************************************************************************
CREATE (n:AcordPhysicalModel:AcordNodeType {ModelName:"FysModel 1", FBB:"_fbbTxPartySameAs", Name:"TxPartySameAs"}) return n;


CREATE (n:AcordPhysicalModel:AcordPhysicalProperty {ModelName:"FysModel 1", FBB:"_fbbTxPartyKey1", FBB_O:"_fbbTxPartySameAs", 
Name:"TxPartyChild",type_id:"_fbb70a9f_c08111e68803_e7fb8ec78045",umlType:"uml:PrimitiveType",dataType:"Entity Key"}) return n;

CREATE (n:AcordPhysicalModel:AcordPhysicalProperty {ModelName:"FysModel 1", FBB:"_fbbTxPartyKey2", FBB_O:"_fbbTxPartySameAs", 
Name:"TxPartyMaster",type_id:"_fbb70a9f_c08111e68803_e7fb8ec78045",umlType:"uml:PrimitiveType",dataType:"Entity Key"}) return n;

CREATE (n:AcordPhysicalModel:AcordPhysicalProperty {ModelName:"FysModel 1", FBB:"_fbbTxProperty1", FBB_O:"_fbbTxPartySameAs", 
Name:"TxMaxSequence",type_id:"_fbb70a9f_c08111e68803_e7fb8ec78045",umlType:"uml:PrimitiveType",dataType:"String"}) return n;



CREATE (n:AcordPhysicalModel:AcordPhysicalRelation {ModelName:"FysModel 1", FBB:"_fbbTxPartyKey1Realtion", FBB_O:"_fbbbd602_c08111e68803_e7fb8ec78045", 
Name:"TxSameAsPartyChild",association:"_fbbTxPartyKey1Association",cardinality:"*",type:"_fbbTxPartyKey1Type"}) return n;

CREATE (n:AcordPhysicalModel:AcordPhysicalRelation {ModelName:"FysModel 1", FBB:"_fbbTxPartyKey2Realtion", FBB_O:"_fbbbd602_c08111e68803_e7fb8ec78045", 
Name:"TxSameAsPartyMaster",association:"_fbbTxPartyKey1Association",cardinality:"*",type:"_fbbTxPartyKey1Type"}) return n;


//************************RELATIONS

//*********************RELATIONS

MATCH(n:AcordPhysicalModel:AcordNodeType),(o:AcordPhysicalModel:AcordPhysicalProperty)
where  n.Name="TxPartySameAs" and o.Name in ["TxPartyChild","TxPartyMaster","TxMaxSequence"]
CREATE(n)-[r:HAS_PROPERTY]->(o)
return n,r,o;

MATCH(n:AcordPhysicalModel:AcordNodeType),(o:AcordPhysicalModel:AcordPhysicalRelation)
where n.FBB=o.FBB_O and n.Name="Party" and o.Name in ['TxSameAsPartyMaster','TxSameAsPartyChild']
CREATE(n)-[r:HAS_RELATIONSHIP]->(o)
return n,r,o;



MATCH(n:AcordPhysicalModel:AcordPhysicalRelation),(o:AcordPhysicalModel:AcordNodeType)
where n.Name in ['TxSameAsPartyMaster','TxSameAsPartyChild'] and o.Name="TxPartySameAs"
CREATE (n)-[r:HAS_RELATIONSHIP]->(o)
return n,r,o;



//*********************DATA LINEAGE

match(lo:AcordLogicalModel{ModelName:'LogModel 1'})-[:IS_GENERALIZATION_OF]->(lg:AcordLogicalGeneralization) 
match (ph:AcordPhysicalModel{ModelName:'FysModel 1'})-[:IS_SUBTYPE_OF]->(pg:AcordPhysicalGeneralization)
 where lg.Name=pg.Name 
 merge (lg)-[:IMPLEMENTED_BY]->(pg);